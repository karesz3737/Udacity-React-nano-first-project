{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kerteszkaroly/Downloads/reactnd-project-myreads-starter-master 111/src/Components/SearchPage.js\";\nimport React, { Component } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nexport default class SearchPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: \"\",\n      books: []\n    };\n\n    this.bookSearch = async query => {\n      const booksBack = await BooksAPI.search(query);\n\n      if (booksBack.length > 0) {\n        this.se;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-search\",\n          onClick: () => this.setState({\n            books: []\n          }),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title or author\",\n            value: this.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kerteszkaroly/Downloads/reactnd-project-myreads-starter-master 111/src/Components/SearchPage.js"],"names":["React","Component","BooksAPI","SearchPage","state","query","books","bookSearch","booksBack","search","length","se","render","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAChDG,KADgD,GACxC;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAE;AAApB,KADwC;;AAAA,SAEhDC,UAFgD,GAEnC,MAAOF,KAAP,IAAiB;AAC5B,YAAMG,SAAS,GAAG,MAAMN,QAAQ,CAACO,MAAT,CAAgBJ,KAAhB,CAAxB;;AACA,UAAIG,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAAyB;AACvB,aAAKC,EAAL;AACD;AACF,KAP+C;AAAA;;AAQhDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEP,YAAAA,KAAK,EAAE;AAAT,WAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCASE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,2BAA/B;AAA2D,YAAA,KAAK,EAAE,KAAKF;AAAvE;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAoBE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAnC+C","sourcesContent":["import React, { Component } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nexport default class SearchPage extends Component {\n  state = { query: \"\", books: [] };\n  bookSearch = async (query) => {\n    const booksBack = await BooksAPI.search(query);\n    if (booksBack.length > 0){\n      this.se\n    }\n  };\n  render() {\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <button\n            className=\"close-search\"\n            onClick={() => this.setState({ books: [] })}\n          >\n            Close\n          </button>\n          <div className=\"search-books-input-wrapper\">\n            {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n            <input type=\"text\" placeholder=\"Search by title or author\" value={this.state}/>\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\"></ol>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}